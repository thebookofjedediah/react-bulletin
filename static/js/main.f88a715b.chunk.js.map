{"version":3,"sources":["graphql/apolloClient.js","graphql/fragments.js","graphql/queries/posts.js","components/Loader.js","components/Layout/fusTheme.js","components/Layout/appbar.js","graphql/queries/categories.js","components/Layout/drawer.js","components/Layout/styles.js","components/Layout/AnnouncementForm.js","components/Layout/index.js","components/PostPreview.js","components/GridTypes/GridView.js","components/GridTypes/ListView.js","components/GridTypes/PrintView.js","components/GridTypes/GridRenderer.js","components/Error.js","views/Category.js","views/Home.js","views/PostDetail.js","views/Help.js","views/Bulletin.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["client","ApolloClient","link","HttpLink","uri","cache","InMemoryCache","postFragment","gql","_templateObject","categoriesFragment","_templateObject2","getAllPosts","posts_templateObject","getPostsByCat","posts_templateObject2","SinglePostDetail","_templateObject3","PostSearchQuery","_templateObject4","FilterDateQuery","_templateObject5","withStyles","theme","root","flexGrow","height","props","classes","react_default","a","createElement","Grid_default","container","className","justify","alignItems","item","xs","sm","md","Progress","size","createMuiTheme","palette","primary","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","contrastDefaultColor","TopBar","_ref","open","handleAnyInputChange","searchStyles","searchIconStyles","handleSearchToggle","handleDrawerOpen","openSearch","handleLayoutChange","handleClick","anchorEl","handleRequestClose","handlePrintIcon","viewtype","showSearch","style","AppBar_default","classNames","appBar","Toolbar_default","disableGutters","IconButton_default","color","aria-label","onClick","menuButton","navIconHide","Menu_default","Typography_default","variant","flex","typo","noWrap","TextField_default","onChange","name","placeholder","autoFocus","Close_default","Tooltip_default","title","placement","Search_default","ViewStream_default","ViewQuilt_default","Print_default","categories_templateObject","getAllCategories","categories_templateObject2","SideComponent","state","month","year","formStyles","display","handleChange","event","console","log","_this","setState","Object","defineProperty","target","value","toggleForm","_this2","this","form","List","Form","formControl","Input","htmlFor","Select_default","fullWidth","input","Input_default","id","material_ui_Menu","yearsArray","i","Date","getFullYear","push","years","map","key","Button_default","raised","handleFilterDate","drawer","drawerInner","drawerHeader","react_router_dom","to","image","alt","src","handleDrawerClose","ChevronLeft_default","Divider_default","button","secondary","Alarm_default","inset","ListSubheader_default","data","loading","categories","edges","category","node","concat","slug","displayCategories","AccessTime_default","btn","toggleDrawer","Hidden_default","mdUp","implementation","Drawer_default","paper","drawerPaper","onRequestClose","handleDrawerToggle","ModalProps","keepMounted","smDown","Component","graphql","styles","_appBar","logo","width","margin","closeButton","top","left","position","zIndex","textDecoration","appFrame","backgroundColor","borderBottom","breakpoints","up","marginLeft","transitions","create","easing","sharp","duration","leavingScreen","marginRight","hide","objectSpread","justifyContent","padding","mixins","toolbar","drawerItem","fontSize","content","spacing","unit","marginTop","cursor","absolute","flip","bottom","right","AnnouncementForm","files","btnText","handleSubmit","e","preventDefault","_this$state","announcement","formData","FormData","append","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","fileInp","Symbol","iterator","next","done","file","err","return","fetch","method","body","then","res","json","ok","catch","er","handleFileChange","sString","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","anchor","btnDrawerOpen","react_jotform_embed_default","textfield","marginBottom","bluetext","blue","background","yellow","Layout","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","openMenu","searchPosts","searchText","handleSearchSubmit","query","variables","search","posts","currentTarget","newVal","window","localStorage","setItem","handleClosePV","view","getItem","deBounced","debounce","layoutType","material_ui_styles","appbar","Layout_drawer","Layout_AnnouncementForm","children","child","React","cloneElement","searchposts","withApollo","withRouter","card","titleColor","dateColor","grey","categoryColor","media","continue","printVAtt","CardImage","mediaStyle","imageURL","Card","component","PostPreview","cRead","sanitizeContent","newContent","replace","trim","split","length","slice","join","sanitized","_this$props","date","postDate","toLocaleDateString","PostPreview_CardView","PostPreview_PlainView","CardView","_ref2","Card_default","PostPreview_CardImage","Typography_Typography","toUpperCase","react_sanitized_html_lib_default","html","gutterBottom","PlainView","_ref3","fontFamily","dangerouslySetInnerHTML","__html","GridView","handleOnScroll","scrollTop","document","documentElement","scrollHeight","clientHeight","innerHeight","Math","ceil","pageInfo","hasNextPage","onLoadMore","addEventListener","loadDone","loadingFinished","removeEventListener","components_Loader","lib_default","post","components_PostPreview","featuredImage","sourceUrl","excerpt","ListView","Fragment","Grid_Grid","GridRenderer","grid","Query_default","notifyOnNetworkStatusChange","error","fetchMore","message","PrintView","after","endCursor","updateQuery","prevResult","fetchMoreResult","newEdges","__typename","toConsumableArray","GridTypes_GridView","_ref4","loadFinished","GridTypes_ListView","_ref5","red","type","queryString","RenderLayout","match","isLoading","params","components_Layout","components_Error","Category_CategoryError","Category_RenderCategories","CategoryError","Helmet","RenderCategories","GridTypes_GridRenderer","where","options","allPosts","RenderHome","first","Home","Home_RenderHome","RenderPost","postBy","PostDetail_RenderPost","Help","week","dayjs","startOf","dateQuery","day","Bulletin","Bulletin_RenderHome","Routes","react_router","exact","path","Category","PostDetail","App","react_apollo_esm","src_Routes","Boolean","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f88a715b.chunk.js","sourcesContent":["import { ApolloClient } from 'apollo-client'\nimport { HttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\n\nconst client = new ApolloClient({\n  // link: new HttpLink({ uri: 'http://bulletinlocaltest.local/graphql' }),\n  // link: new HttpLink({ uri: 'https://www.wpgraphql.com/graphql' }),\n  link: new HttpLink({ uri: 'http://wp-student.franciscan.online/graphql' }),\n  cache: new InMemoryCache()\n})\n\nexport default client\n","import gql from 'graphql-tag'\n\nexport const postFragment = gql`\n  fragment PostData on RootQueryToPostConnection {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        title\n        date\n        slug\n        excerpt\n        categories {\n          edges {\n            node {\n              id\n              name\n            }\n          }\n        }\n        featuredImage {\n          sourceUrl\n        }\n      }\n    }\n  }\n`\n\nexport const categoriesFragment = gql`\n  fragment CategoryData on RootQueryToCategoryConnection {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        name\n        slug\n      }\n    }\n  }\n`\n","import gql from 'graphql-tag'\nimport { postFragment } from '../fragments'\n\nexport const getAllPosts = gql`\n  query getAllPosts(\n    $first: Int\n    $after: String\n    $where: RootQueryToPostConnectionWhereArgs\n  ) {\n    posts(first: $first, after: $after, where: $where) {\n      ...PostData\n    }\n  }\n  ${postFragment}\n`\n\nexport const getPostsByCat = gql`\n  query getPostsByCat($slug: String, $after: String) {\n    posts(first: 15, after: $after, where: { categoryName: $slug }) {\n      ...PostData\n    }\n  }\n  ${postFragment}\n`\n\nexport const SinglePostDetail = gql`\n  query SinglePostDetail($slug: String!) {\n    postBy(slug: $slug) {\n      id\n      slug\n      title\n      date\n      content\n      categories {\n        edges {\n          node {\n            id\n            name\n          }\n        }\n      }\n      featuredImage {\n        sourceUrl\n      }\n    }\n  }\n`\n\nexport const PostSearchQuery = gql`\n  query PostSearchQuery($search: String!) {\n    posts(where: { search: $search }) {\n      ...PostData\n    }\n  }\n  ${postFragment}\n`\n\nexport const FilterDateQuery = gql`\n  query PostSearchQuery($year: Int, $month: Int) {\n    posts(where: { dateQuery: { year: $year, month: $month } }) {\n      ...PostData\n    }\n  }\n  ${postFragment}\n`\n","import React from 'react'\nimport Grid from 'material-ui/Grid'\nimport { withStyles } from 'material-ui/styles'\nimport { CircularProgress } from 'material-ui/Progress'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: '100%'\n  }\n})\n\nconst Loader = props => {\n  const classes = props.classes\n  return (\n    <Grid\n      container\n      className={classes.root}\n      justify='center'\n      alignItems='center'\n    >\n      <Grid item xs={4} sm={3} md={2}>\n        <CircularProgress size={100} />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default withStyles(styles)(Loader)\n","import { createMuiTheme } from 'material-ui/styles'\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      '50': '#21412a',\n      '100': '#21412a',\n      '200': '#21412a',\n      '300': '#21412a',\n      '400': '#21412a',\n      '500': '#21412a',\n      '600': '#21412a',\n      '700': '#21412a',\n      '800': '#21412a',\n      '900': '#21412a',\n      A100: '#21412a',\n      A200: '#21412a',\n      A400: '#21412a',\n      A700: '#21412a',\n      contrastDefaultColor: 'light'\n    }\n  }\n})\n\nexport default theme\n","import React from 'react'\nimport AppBar from 'material-ui/AppBar'\nimport Toolbar from 'material-ui/Toolbar'\nimport CloseIcon from 'material-ui-icons/Close'\nimport Typography from 'material-ui/Typography'\nimport IconButton from 'material-ui/IconButton'\nimport MenuIcon from 'material-ui-icons/Menu'\nimport ViewQuiltIcon from 'material-ui-icons/ViewQuilt'\nimport ViewStreamIcon from 'material-ui-icons/ViewStream'\nimport SearchIcon from 'material-ui-icons/Search'\nimport PrintIcon from 'material-ui-icons/Print'\nimport TextField from 'material-ui/TextField'\nimport Tooltip from 'material-ui/Tooltip'\nimport classNames from 'classnames'\n\nconst TopBar = ({\n  classes,\n  open,\n  searchStyles,\n  searchIconStyles,\n  handleAnyInputChange,\n  handleSearchToggle,\n  openSearch,\n  handleDrawerOpen,\n  handleClick,\n  anchorEl,\n  handleRequestClose,\n  handleLayoutChange,\n  handlePrintIcon,\n  viewtype,\n  showSearch,\n  style\n}) => {\n  return (\n    <div style={style}>\n      <AppBar className={classNames(classes.appBar, open)}>\n        <Toolbar disableGutters={!open}>\n          <IconButton\n            color='primary'\n            aria-label='open drawer'\n            onClick={handleDrawerOpen}\n            className={classNames(classes.menuButton, classes.navIconHide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            variant='display1'\n            color='inherit'\n            className={classNames(classes.flex, classes.typo)}\n            noWrap\n          >\n            Student Bulletin\n          </Typography>\n\n          {showSearch ? (\n            <div>\n              <TextField\n                onChange={handleAnyInputChange}\n                name='searchText'\n                placeholder='Search'\n                autoFocus\n              />\n\n              <IconButton\n                onClick={handleSearchToggle}\n                color='primary'\n                aria-label='Close Search'\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          ) : (\n            <Tooltip title='Search' placement='left'>\n              <IconButton\n                onClick={handleSearchToggle}\n                color='primary'\n                aria-label='Search'\n              >\n                <SearchIcon />\n              </IconButton>\n            </Tooltip>\n          )}\n\n          <Tooltip\n            title={viewtype === 'grid' ? 'List View' : 'Grid View'}\n            placement='left'\n          >\n            <IconButton\n              onClick={handleLayoutChange}\n              color='primary'\n              aria-label='View Type'\n            >\n              {viewtype === 'grid' ? <ViewStreamIcon /> : <ViewQuiltIcon />}\n            </IconButton>\n          </Tooltip>\n\n          <Tooltip title='Print View' placement='left'>\n            <IconButton\n              onClick={handlePrintIcon}\n              color='primary'\n              aria-label='More'\n            >\n              <PrintIcon />\n            </IconButton>\n          </Tooltip>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nexport default TopBar\n","import gql from 'graphql-tag'\nimport { postFragment, categoriesFragment } from '../fragments'\n\nexport const getCategories = gql`\n  query getAllCategoriesandPosts {\n    categories {\n      ...CategoryData\n      edges {\n        node {\n          posts {\n            ...PostData\n          }\n        }\n      }\n    }\n  }\n  ${postFragment}\n  ${categoriesFragment}\n`\n\nexport const getAllCategories = gql`\n  query getAllCategories {\n    categories {\n      ...CategoryData\n    }\n  }\n  ${categoriesFragment}\n`\n","import React, { Component } from 'react'\nimport { getAllCategories } from '../../graphql/queries/categories'\nimport Drawer from 'material-ui/Drawer'\nimport Hidden from 'material-ui/Hidden'\nimport Divider from 'material-ui/Divider'\nimport IconButton from 'material-ui/IconButton'\nimport ChevronLeftIcon from 'material-ui-icons/ChevronLeft'\nimport ListSubheader from 'material-ui/List/ListSubheader'\nimport ClockIcon from 'material-ui-icons/AccessTime'\nimport { ListItem, ListItemText, ListItemIcon } from 'material-ui/List'\nimport { Link } from 'react-router-dom'\nimport AlarmClock from 'material-ui-icons/Alarm'\nimport { graphql } from 'react-apollo'\nimport Input, { InputLabel } from 'material-ui/Input'\nimport { MenuItem } from 'material-ui/Menu'\nimport { FormControl } from 'material-ui/Form'\nimport Select from 'material-ui/Select'\nimport Button from 'material-ui/Button'\n\nconst displayCategories = props => {\n  const { data, classes } = props\n  if (data.loading) return\n\n  return (\n    <div>\n      <Link to={`/all`} className={classes.link}>\n        <ListItem button>\n          <ListItemText secondary={`All`} />\n        </ListItem>\n      </Link>\n      {data.categories.edges.map(category => (\n        <Link\n          key={category.node.id}\n          to={`/category/${category.node.slug}`}\n          className={classes.link}\n        >\n          <ListItem button>\n            <ListItemText secondary={category.node.name} />\n          </ListItem>\n        </Link>\n      ))}\n    </div>\n  )\n}\n\nclass SideComponent extends Component {\n  state = {\n    month: '',\n    year: '',\n    formStyles: {\n      display: 'none'\n    }\n  }\n  handleChange = name => event => {\n    console.log(event)\n    this.setState({ [name]: event.target.value })\n  }\n\n  render () {\n    const classes = this.props.classes\n    const years = () => {\n      let yearsArray = []\n      for (let i = new Date().getFullYear(); i >= 2016; i--) yearsArray.push(i)\n      return yearsArray\n    }\n    const form = (\n      <form style={this.state.formStyles}>\n        <ListItem>\n          <FormControl className={classes.formControl}>\n            <InputLabel htmlFor='month'>Month</InputLabel>\n            <Select\n              fullWidth\n              value={this.state.month}\n              onChange={this.handleChange('month')}\n              input={<Input id='month' />}\n            >\n              <MenuItem value=''>\n                <em>None</em>\n              </MenuItem>\n              <MenuItem value={1}>January</MenuItem>\n              <MenuItem value={2}>February</MenuItem>\n              <MenuItem value={3}>March</MenuItem>\n              <MenuItem value={4}>April</MenuItem>\n              <MenuItem value={5}>May</MenuItem>\n              <MenuItem value={6}>June</MenuItem>\n              <MenuItem value={7}>July</MenuItem>\n              <MenuItem value={8}>August</MenuItem>\n              <MenuItem value={9}>September</MenuItem>\n              <MenuItem value={10}>October</MenuItem>\n              <MenuItem value={11}>November</MenuItem>\n              <MenuItem value={12}>December</MenuItem>\n            </Select>\n          </FormControl>\n        </ListItem>\n        <ListItem>\n          <FormControl className={classes.formControl}>\n            <InputLabel htmlFor='year'>Year</InputLabel>\n            <Select\n              fullWidth\n              value={this.state.year}\n              onChange={this.handleChange('year')}\n              input={<Input id='year' />}\n            >\n              <MenuItem value=''>\n                <em>None</em>\n              </MenuItem>\n              {years().map(year => (\n                <MenuItem value={year} key={year}>\n                  {year}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n        <ListItem>\n          <Button\n            raised\n            onClick={() =>\n              this.props.handleFilterDate(this.state.month, this.state.year)\n            }\n          >\n            SUBMIT\n          </Button>\n        </ListItem>\n      </form>\n    )\n    const drawer = (\n      <div className={classes.drawerInner}>\n        <div className={classes.drawerHeader}>\n          <ListItem>\n            <Link to='/all'>\n              <img\n                className={classes.image}\n                alt='logo'\n                src='https://franciscan.university/img/side-nav-logo.jpg'\n              />\n            </Link>\n          </ListItem>\n          <IconButton\n            className={classes.navIconHide}\n            onClick={this.props.handleDrawerClose}\n          >\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <Link to='/' className={classes.link}>\n          <ListItem button>\n            <ListItemText secondary='Current Bulletin' />\n          </ListItem>\n        </Link>\n        <Divider />\n        <Link to='/' className={classes.link}>\n          <ListItem button>\n            <ListItemIcon>\n              <AlarmClock />\n            </ListItemIcon>\n            <ListItemText inset secondary='Take Action' />\n          </ListItem>\n        </Link>\n        <Divider />\n        <ListSubheader>Categories</ListSubheader>\n        {displayCategories(this.props)}\n        <Divider />\n        <ListItem button onClick={this.toggleForm}>\n          <ListItemIcon>\n            <ClockIcon />\n          </ListItemIcon>\n          <ListItemText inset secondary='Filter By Date' />\n        </ListItem>\n        {form}\n        <Divider />\n        <ListItem\n          button\n          className={classes.btn}\n          onClick={this.props.toggleDrawer}\n        >\n          <ListItemText secondary={'Submit Announcement'} />\n        </ListItem>\n        <Link to='/help' className={classes.link}>\n          <ListItem button>\n            <ListItemText secondary={'Help'} />\n          </ListItem>\n        </Link>\n      </div>\n    )\n    return (\n      <div style={this.props.style}>\n        <Hidden mdUp implementation='css'>\n          <Drawer\n            variant='temporary'\n            open={this.props.open}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n            onRequestClose={this.props.handleDrawerToggle}\n            ModalProps={{\n              keepMounted: true // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden smDown implementation='css'>\n          <Drawer\n            variant='persistent'\n            open\n            classes={{\n              paper: classes.drawerPaper\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </div>\n    )\n  }\n  toggleForm = () => [\n    this.setState({\n      formStyles: {\n        display: 'block'\n      }\n    })\n  ]\n}\n\nexport default graphql(getAllCategories)(SideComponent)\n","const drawerWidth = 250\n\nconst styles = theme => ({\n  logo: {\n    width: '234px',\n    margin: '8px auto'\n  },\n  flex: {\n    flex: 1\n  },\n  closeButton: {\n    top: '5px',\n    left: '30px',\n    position: 'relative',\n    zIndex: 1\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'inherit'\n  },\n  root: {\n    width: '100%',\n    height: '100%',\n    zIndex: 1\n  },\n  appFrame: {\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n    height: '100%'\n  },\n  appBar: {\n    backgroundColor: '#fff',\n    borderBottom: 'solid 3px #998643',\n    color: '#21412a',\n    position: 'fixed',\n    [theme.breakpoints.up('md')]: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`\n    },\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20\n  },\n  typo: {\n    marginLeft: 15\n  },\n  hide: {\n    display: 'none'\n  },\n  drawerPaper: {\n    width: 250,\n    [theme.breakpoints.up('md')]: {\n      width: drawerWidth,\n      position: 'fixed',\n      height: '100%'\n    }\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  drawerItem: {\n    fontSize: '16px'\n  },\n  content: {\n    width: `calc(100% - ${drawerWidth + theme.spacing.unit * 3 * 2}px)`,\n    padding: theme.spacing.unit * 3,\n    marginTop: 56,\n    [theme.breakpoints.up('md')]: {\n      marginTop: 64,\n      marginLeft: drawerWidth\n    }\n  },\n  navIconHide: {\n    [theme.breakpoints.up('md')]: {\n      display: 'none'\n    }\n  },\n  image: {\n    height: '100%',\n    width: '100%'\n  },\n  btn: {\n    cursor: 'pointer'\n  },\n  absolute: {\n    flip: false,\n    position: 'fixed',\n    bottom: 40,\n    right: 40\n  },\n  formControl: {\n    width: '100%'\n  }\n})\n\nexport default styles\n","import React, { Component } from 'react'\nimport Drawer from 'material-ui/Drawer'\nimport { withStyles } from 'material-ui/styles'\nimport { blue, yellow } from 'material-ui/colors'\nimport CloseIcon from 'material-ui-icons/Close'\nimport IconButton from 'material-ui/IconButton'\nimport JotformEmbed from 'react-jotform-embed'\n\nconst styles = theme => ({\n  textfield: {\n    width: '100%',\n    marginBottom: '24px'\n  },\n  bluetext: {\n    color: blue[800]\n  },\n  marginTop: {\n    marginTop: '20px'\n  },\n  hide: {\n    display: 'none'\n  },\n  button: {\n    background: yellow[800],\n    color: '#fff'\n  },\n  padding: {\n    padding: '30px'\n  }\n})\n\nclass AnnouncementForm extends Component {\n  state = {\n    files: '',\n    btnText: 'SUBMIT'\n  }\n\n  render () {\n    const classes = this.props.classes\n    return (\n      <Drawer\n        anchor='bottom'\n        open={this.props.btnDrawerOpen}\n        onRequestClose={this.props.toggleDrawer}\n      >\n        <div className={classes.padding}>\n          <IconButton className={classes.closeButton}>\n            <CloseIcon onClick={this.props.toggleDrawer} />\n          </IconButton>\n\n          <JotformEmbed src='https://form.jotform.com/91895433142157' />\n        </div>\n      </Drawer>\n    )\n  }\n  handleSubmit = e => {\n    this.setState({\n      btnText: 'SUBMITTING...'\n    })\n    e.preventDefault()\n    const { title, announcement } = this.state\n    if (!title || !announcement) {\n      this.setState({\n        btnText: 'Fill in all fields and try again'\n      })\n      return\n    }\n    // eslint-disable-next-line\n    let formData = new FormData()\n    formData.append('title', title)\n    formData.append('announcement', announcement)\n    for (const file of this.fileInp.files) formData.append('upload', file)\n    // eslint-disable-next-line\n    fetch('http://localhost:8080/email_announcement', {\n      method: 'POST',\n      body: formData\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.ok) {\n          this.setState({\n            btnText: 'SUBMITTED ✔️'\n          })\n        } else {\n          this.setState({\n            btnText: 'Oops! Try again'\n          })\n        }\n      })\n      .catch(er => {\n        this.setState({\n          btnText: 'Oops! Try again'\n        })\n      })\n  }\n  handleFileChange = e => {\n    if (e.target.files) {\n      let sString = ''\n      // eslint-disable-next-line\n      for (let file of e.target.files) {\n        sString += ` ${file.name}`\n      }\n      this.setState({\n        files: sString\n      })\n    }\n  }\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n}\n\nexport default withStyles(styles)(AnnouncementForm)\n","import React, { Component } from 'react'\nimport { withStyles, MuiThemeProvider } from 'material-ui/styles'\nimport classNames from 'classnames'\nimport theme from './fusTheme'\nimport TopBar from './appbar'\nimport Drawer from './drawer'\nimport styles from './styles'\nimport AnnouncementForm from './AnnouncementForm'\nimport IconButton from 'material-ui/IconButton'\nimport CloseIcon from 'material-ui-icons/Close'\nimport debounce from 'lodash.debounce'\nimport { withApollo } from 'react-apollo'\nimport { PostSearchQuery, FilterDateQuery } from '../../graphql/queries/posts'\nimport { withRouter } from 'react-router-dom'\n\nclass Layout extends Component {\n  constructor (props) {\n    super(props)\n    this.deBounced = debounce(this.handleSearchSubmit, 450)\n  }\n  state = {\n    open: false,\n    anchorEl: null,\n    openMenu: false,\n    viewtype: 'list',\n    btnDrawerOpen: false,\n    searchStyles: { display: 'none' },\n    searchIconStyles: { display: 'block' },\n    searchPosts: undefined,\n    searchText: '',\n    showSearch: false\n  }\n  componentWillMount () {\n    const layoutType = window.localStorage.getItem('l-type') || 'list'\n    this.setState({\n      viewtype: layoutType\n    })\n  }\n\n  handleSearchSubmit = () => {\n    if (this.state.searchText === '') this.setState({ searchText: ' ' })\n    this.props.client\n      .query({\n        query: PostSearchQuery,\n        variables: { search: this.state.searchText }\n      })\n      .then(res => this.setState({ searchPosts: res.data.posts }))\n  }\n  handleSearchToggle = () => {\n    this.setState(state => ({ showSearch: !this.state.showSearch }))\n  }\n  handleDrawerOpen = () => {\n    this.setState({ open: true })\n  }\n  handleClick = event => {\n    this.setState({\n      openMenu: true,\n      anchorEl: event ? event.currentTarget : null\n    })\n  }\n\n  handleFilterDate = (month, year) => {\n    month = !month ? null : month\n    year = !year ? null : year\n    this.props.client\n      .query({\n        query: FilterDateQuery,\n        variables: { month, year }\n      })\n      .then(res => this.setState({ searchPosts: res.data.posts }))\n  }\n\n  handleLayoutChange = () => {\n    const newVal = this.state.viewtype === 'grid' ? 'list' : 'grid'\n    window.localStorage.setItem('l-type', newVal)\n    this.setState({\n      viewtype: newVal\n    })\n  }\n\n  handlePrintIcon = () => {\n    this.setState({\n      viewtype: 'print'\n    })\n  }\n\n  handleRequestClose = () => {\n    this.setState({ openMenu: false })\n  }\n\n  handleDrawerClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleClosePV = () => {\n    const view = window.localStorage.getItem('l-type')\n    this.setState({\n      viewtype: view\n    })\n  }\n\n  toggleDrawer = () => {\n    this.setState({ btnDrawerOpen: !this.state.btnDrawerOpen })\n  }\n\n  render () {\n    const classes = this.props.classes\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <TopBar\n            handleAnyInputChange={this.handleAnyInputChange}\n            searchStyles={this.state.searchStyles}\n            searchIconStyles={this.state.searchIconStyles}\n            handleSearchToggle={this.handleSearchToggle}\n            showSearch={this.state.showSearch}\n            viewtype={this.state.viewtype}\n            open={this.state.open}\n            anchorEl={this.state.anchorEl}\n            classes={this.props.classes}\n            openMenu={this.state.openMenu}\n            handleDrawerOpen={this.handleDrawerOpen}\n            handleClick={this.handleClick}\n            handleRequestClose={this.handleRequestClose}\n            handleLayoutChange={this.handleLayoutChange}\n            handlePrintIcon={this.handlePrintIcon}\n            style={this.state.viewtype === 'print' ? { display: 'none' } : {}}\n          />\n          <Drawer\n            handleFilterDate={this.handleFilterDate}\n            open={this.state.open}\n            classes={this.props.classes}\n            handleDrawerClose={this.handleDrawerClose}\n            toggleDrawer={this.toggleDrawer}\n            style={this.state.viewtype === 'print' ? { display: 'none' } : {}}\n          />\n          <AnnouncementForm\n            btnDrawerOpen={this.state.btnDrawerOpen}\n            toggleDrawer={this.toggleDrawer}\n          />\n          <IconButton\n            className='no-print'\n            style={\n              this.state.viewtype === 'print'\n                ? { top: '5px', left: '90%', position: 'absolute', zIndex: 1 }\n                : { display: 'none' }\n            }\n            onClick={this.handleClosePV}\n          >\n            <CloseIcon />\n          </IconButton>\n          <div className={classes.appFrame}>\n            <main\n              style={this.state.viewtype === 'print' ? { margin: '15px' } : {}}\n              className={classNames(classes.content, this.state.open)}\n            >\n              {// eslint-disable-next-line\n              this.props.children.map((child, i) => {\n                  if (child) {\n                    return React.cloneElement(child, {\n                      viewtype: this.state.viewtype,\n                      searchposts: this.state.searchPosts,\n                      key: i\n                    })\n                  }\n                })}\n            </main>\n          </div>\n        </div>\n      </MuiThemeProvider>\n    )\n  }\n  handleAnyInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n    this.deBounced()\n  }\n}\n\nexport default withApollo(withStyles(styles)(withRouter(Layout)))\n","import React from 'react'\nimport Card, { CardContent, CardMedia } from 'material-ui/Card'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from 'material-ui/styles'\nimport { blue, grey } from 'material-ui/colors'\nimport { Link } from 'react-router-dom'\nimport SanitizedHTML from 'react-sanitized-html'\n\nconst styles = {\n  card: {\n    marginBottom: 15\n  },\n  titleColor: {\n    color: blue[800]\n  },\n  dateColor: {\n    color: grey[500]\n  },\n  categoryColor: {\n    color: '#ffb41f'\n  },\n  media: {\n    height: 'auto',\n    width: '100%'\n  },\n  link: {\n    color: 'inherit',\n    textDecoration: 'none'\n  },\n  continue: {\n    textDecoration: 'none',\n    color: blue[800],\n    fontSize: '16px'\n  },\n  printVAtt: {\n    width: 'auto',\n    fontSize: '18px'\n  }\n}\n\nconst CardImage = ({ mediaStyle, imageURL, slug }) => {\n  if (!imageURL) return ''\n\n  return (\n    <Link to={`/post/${slug}`}>\n      <CardMedia className={mediaStyle} component='img' image={imageURL} />\n    </Link>\n  )\n}\n\nclass PostPreview extends React.Component {\n  state = {\n    cRead: false,\n    content: ''\n  }\n  sanitizeContent = content => {\n    const regex = /(<([^>]+)>)/gi\n    let newContent = content.replace(regex, '')\n    if (!this.props.trim) return newContent\n    if (newContent.split(' ').length > 28) {\n      newContent = newContent\n        .split(' ')\n        .slice(0, 55)\n        .join(' ')\n      this.setState({\n        cRead: true\n      })\n    }\n    return newContent\n  }\n  componentWillMount () {\n    this.setState({ sanitized: this.sanitizeContent(this.props.content) })\n  }\n  render () {\n    const {\n      classes,\n      title,\n      imageURL,\n      date,\n      slug,\n      style,\n      category,\n      view\n    } = this.props\n    const postDate = new Date(date).toLocaleDateString()\n    return (\n      <div>\n        {view === 'card' ? (\n          <CardView\n            classes={classes}\n            title={title}\n            imageURL={imageURL}\n            postDate={postDate}\n            slug={slug}\n            style={style}\n            category={category}\n            cRead={this.state.cRead}\n            content={this.state.sanitized}\n          />\n        ) : (\n          <PlainView\n            classes={classes}\n            title={title}\n            content={this.props.content}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nconst CardView = ({\n  classes,\n  title,\n  slug,\n  imageURL,\n  postDate,\n  id,\n  style,\n  category,\n  content,\n  cRead\n}) => (\n  <div>\n    <Card className={classes.card} style={style}>\n      <CardImage mediaStyle={classes.media} imageURL={imageURL} slug={slug} />\n      <CardContent>\n        <Typography variant='button' className={classes.categoryColor}>\n          {category.toUpperCase()}\n        </Typography>\n        <Typography className={classes.titleColor} variant='h6'>\n          <Link className={classes.link} to={`/post/${slug}`}>\n            <SanitizedHTML html={title} />\n          </Link>\n        </Typography>\n        <Typography className={classes.dateColor} variant='overline'>\n          {postDate}\n        </Typography>\n        <Typography variant='body1' gutterBottom>\n          <div>\n            <SanitizedHTML style={{ display: 'inline' }} html={content} />\n            {cRead && (\n              <Link className={classes.continue} to={`/post/${slug}`}>\n                {' '}\n                ...Continue Reading\n              </Link>\n            )}\n          </div>\n        </Typography>\n      </CardContent>\n    </Card>\n  </div>\n)\n\nconst PlainView = ({ classes, title, id, content }) => (\n  <div style={{ fontFamily: 'serif !important' }}>\n    <h1>\n      <u>{title}</u>\n    </h1>\n    <div dangerouslySetInnerHTML={{ __html: content }} />\n    <hr />\n  </div>\n)\n\nexport default withStyles(styles)(PostPreview)\n","import React from 'react'\nimport Masonry from 'react-masonry-component'\nimport Loader from '../Loader'\nimport '../../styles/grid.css'\nimport PostPreview from '../PostPreview'\n\nclass GridView extends React.Component {\n  componentDidMount () {\n    window.addEventListener('scroll', this.handleOnScroll)\n    if (this.props.loadDone) this.setState({ loadingFinished: true })\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('scroll', this.handleOnScroll)\n  }\n\n  handleOnScroll = () => {\n    // http://stackoverflow.com/questions/9439725/javascript-how-to-detect-if-browser-window-is-scrolled-to-bottom\n    var scrollTop =\n      (document.documentElement && document.documentElement.scrollTop) ||\n      document.body.scrollTop\n    var scrollHeight =\n      (document.documentElement && document.documentElement.scrollHeight) ||\n      document.body.scrollHeight\n    var clientHeight =\n      document.documentElement.clientHeight || window.innerHeight\n    var scrolledToBottom = Math.ceil(scrollTop + clientHeight) >= scrollHeight\n    if (scrolledToBottom) {\n      if (this.props.posts.pageInfo.hasNextPage) this.props.onLoadMore()\n    }\n  }\n\n  render () {\n    if (!this.props.posts && this.props.loading) return <Loader />\n    return (\n      <div className='row'>\n        <div className='container-fluid'>\n          <Masonry>\n            {this.props.posts.edges.map(post => (\n              <div className='col s12 m12 l6 xl4' key={post.node.slug}>\n                <PostPreview\n                  view='card'\n                  date={post.node.date}\n                  imageURL={\n                    post.node.featuredImage && post.node.featuredImage.sourceUrl\n                  }\n                  slug={post.node.slug}\n                  title={post.node.title}\n                  category={post.node.categories.edges[0].node.name}\n                  content={post.node.excerpt}\n                  trim\n                />\n              </div>\n            ))}\n          </Masonry>\n        </div>\n        {this.props.loading && <Loader />}\n      </div>\n    )\n  }\n}\n\nexport default GridView\n","import React from 'react'\nimport Grid from 'material-ui/Grid'\nimport Loader from '../Loader'\nimport PostPreview from '../PostPreview'\n\nclass ListView extends React.Component {\n  state = {\n    loadingFinished: false\n  }\n\n  componentDidMount () {\n    window.addEventListener('scroll', this.handleOnScroll)\n    if (this.props.loadDone) this.setState({ loadingFinished: true })\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('scroll', this.handleOnScroll)\n  }\n\n  handleOnScroll = () => {\n    // http://stackoverflow.com/questions/9439725/javascript-how-to-detect-if-browser-window-is-scrolled-to-bottom\n    var scrollTop =\n      (document.documentElement && document.documentElement.scrollTop) ||\n      document.body.scrollTop\n    var scrollHeight =\n      (document.documentElement && document.documentElement.scrollHeight) ||\n      document.body.scrollHeight\n    var clientHeight =\n      document.documentElement.clientHeight || window.innerHeight\n    var scrolledToBottom = Math.ceil(scrollTop + clientHeight) >= scrollHeight\n    if (scrolledToBottom) {\n      if (this.props.posts.pageInfo.hasNextPage) this.props.onLoadMore()\n    }\n  }\n\n  render () {\n    if (!this.props.posts && this.props.loading) return <Loader />\n\n    return (\n      <>\n        <Grid container justify='center'>\n          <Grid item xs={12} sm={8} md={6}>\n            {this.props.posts.edges.map(post => (\n              <PostPreview\n                view='card'\n                key={post.node.slug}\n                slug={post.node.slug}\n                date={post.node.date}\n                imageURL={\n                  post.node.featuredImage && post.node.featuredImage.sourceUrl\n                }\n                title={post.node.title}\n                category={post.node.categories.edges[0].node.name}\n                content={post.node.excerpt}\n              />\n            ))}\n          </Grid>\n          {this.props.loading && <Loader />}\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport default ListView\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport PostPreview from '../PostPreview'\n\nclass ListView extends React.Component {\n  componentDidMount () {\n    window.addEventListener('scroll', this.handleOnScroll)\n    if (this.props.loadDone) this.setState({ loadingFinished: true })\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('scroll', this.handleOnScroll)\n  }\n\n  handleOnScroll = () => {\n    // http://stackoverflow.com/questions/9439725/javascript-how-to-detect-if-browser-window-is-scrolled-to-bottom\n    var scrollTop =\n      (document.documentElement && document.documentElement.scrollTop) ||\n      document.body.scrollTop\n    var scrollHeight =\n      (document.documentElement && document.documentElement.scrollHeight) ||\n      document.body.scrollHeight\n    var clientHeight =\n      document.documentElement.clientHeight || window.innerHeight\n    var scrolledToBottom = Math.ceil(scrollTop + clientHeight) >= scrollHeight\n    if (scrolledToBottom) {\n      if (this.props.posts.pageInfo.hasNextPage) this.props.onLoadMore()\n    }\n  }\n\n  render () {\n    if (!this.props.posts && this.props.loading) return <p>Loading....</p>\n    return (\n      <div>\n        <Grid container justify='center'>\n          <Grid item xs={12}>\n            <h1>This Week{\"'\"}s Bulletin</h1>\n            {this.props.posts &&\n              this.props.posts.edges.map(post => (\n                <PostPreview\n                  view='print'\n                  key={post.node.id}\n                  title={post.node.title}\n                  content={post.node.excerpt}\n                />\n              ))}\n          </Grid>\n        </Grid>\n        {this.props.loading && <h2>Loading...</h2>}\n      </div>\n    )\n  }\n}\n\nexport default ListView\n","import React from 'react'\nimport GridView from './GridView'\nimport ListView from './ListView'\nimport PrintView from './PrintView'\nimport Query from 'react-apollo/Query'\n\nconst GridRenderer = ({ viewtype, query, posts, variables }) => {\n  const grid = viewtype === 'grid'\n\n  return posts == null ? (\n    <Query notifyOnNetworkStatusChange query={query} variables={variables}>\n      {({ data, loading, error, fetchMore }) => {\n        if (error) return <p>{error.message}</p>\n        const posts = data.posts\n\n        return (\n          <>\n            {viewtype === 'print' && (\n              <PrintView\n                loading={loading}\n                posts={data.posts}\n                loadDone={false}\n                onLoadMore={() =>\n                  fetchMore({\n                    variables: {\n                      after: posts.pageInfo.endCursor\n                    },\n                    updateQuery: (prevResult, { fetchMoreResult }) => {\n                      const newEdges = fetchMoreResult.posts.edges\n                      const pageInfo = fetchMoreResult.posts.pageInfo\n\n                      return newEdges.length\n                        ? {\n                          posts: {\n                            __typename: prevResult.posts.__typename,\n                            edges: [...prevResult.posts.edges, ...newEdges],\n                            pageInfo\n                          }\n                        }\n                        : prevResult\n                    }\n                  })\n                }\n              />\n            )}\n            {grid && (\n              <GridView\n                loading={loading}\n                posts={data.posts}\n                loadDone={false}\n                onLoadMore={() =>\n                  fetchMore({\n                    variables: {\n                      after: posts.pageInfo.endCursor\n                    },\n                    updateQuery: (prevResult, { fetchMoreResult }) => {\n                      const newEdges = fetchMoreResult.posts.edges\n                      const pageInfo = fetchMoreResult.posts.pageInfo\n                      return newEdges.length\n                        ? {\n                          posts: {\n                            __typename: prevResult.posts.__typename,\n                            edges: [...prevResult.posts.edges, ...newEdges],\n                            pageInfo\n                          },\n                          loadFinished: true\n                        }\n                        : prevResult\n                    }\n                  })\n                }\n              />\n            )}\n            {!grid && viewtype !== 'print' && (\n              <ListView\n                loading={loading}\n                posts={data.posts}\n                loadDone={false}\n                onLoadMore={() =>\n                  fetchMore({\n                    variables: {\n                      after: posts.pageInfo.endCursor\n                    },\n                    updateQuery: (prevResult, { fetchMoreResult }) => {\n                      const newEdges = fetchMoreResult.posts.edges\n                      const pageInfo = fetchMoreResult.posts.pageInfo\n                      return newEdges.length\n                        ? {\n                          posts: {\n                            __typename: prevResult.posts.__typename,\n                            edges: [...prevResult.posts.edges, ...newEdges],\n                            pageInfo\n                          },\n                          loadFinished: true\n                        }\n                        : prevResult\n                    }\n                  })\n                }\n              />\n            )}\n          </>\n        )\n      }}\n    </Query>\n  ) : (\n    <div>\n      {viewtype === 'print' && <PrintView posts={posts} loadDone />}\n      {grid && <GridView posts={posts} loadDone />}\n      {!grid && viewtype !== 'print' && <ListView posts={posts} loadDone />}\n    </div>\n  )\n}\n\nexport default GridRenderer\n","import React from 'react'\nimport Grid from 'material-ui/Grid'\nimport { withStyles } from 'material-ui/styles'\nimport Typography from 'material-ui/Typography'\nimport { red } from 'material-ui/colors'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: '100%'\n  },\n  err: {\n    color: red[500]\n  }\n})\n\nconst Error = ({ error, classes }) => {\n  return (\n    <Grid\n      container\n      className={classes.root}\n      justify='center'\n      alignItems='center'\n    >\n      <Grid item xs={6} sm={6} md={4}>\n        <Typography className={classes.err} type='headline' gutterBottom>\n          {error}\n        </Typography>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default withStyles(styles)(Error)\n","import React from 'react'\nimport { graphql } from 'react-apollo'\nimport { getPostsByCat, getAllPosts } from '../graphql/queries/posts'\nimport Loader from '../components/Loader'\nimport Layout from '../components/Layout/index'\nimport { Helmet } from 'react-helmet'\n\nimport GridRenderer from '../components/GridTypes/GridRenderer'\nimport Error from '../components/Error'\n\nconst Category = ({ data, match, viewtype, searchposts }) =>\n  RenderLayout(data, match, searchposts, viewtype)\nconst AllPosts = ({ data, viewtype, searchposts }) =>\n  RenderLayout(data, null, searchposts, viewtype)\nlet queryString = ''\nconst RenderLayout = (data, match, viewtype) => {\n  const isLoading = !data.posts\n  if (match) queryString = match.params.slug\n  return (\n    <Layout>\n      {!data.error && isLoading && <Loader />}\n      {data.error && <Error error={data.error.message} />}\n      {!isLoading && data.posts.edges.length === 0 && <CategoryError />}\n      {!isLoading && data.posts.edges.length > 0 && (\n        <RenderCategories data={data} viewtype={viewtype} />\n      )}\n    </Layout>\n  )\n}\n\nconst CategoryError = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>\n          Category Doesn{\"'\"}t Exist | Bulletin - Franciscan University of\n          Steubenville\n        </title>\n      </Helmet>\n      <div>The category you are searching for does not exist</div>\n    </div>\n  )\n}\n\nconst RenderCategories = ({ data, searchposts, viewtype }) => {\n  const posts = searchposts || data.posts\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          Posts By Categories | Bulletin - Franciscan University of Steubenville\n        </title>\n      </Helmet>\n      <GridRenderer\n        posts={posts}\n        viewtype={viewtype}\n        query={getPostsByCat}\n        where={queryString}\n      />\n    </>\n  )\n}\n\nexport default graphql(getPostsByCat, {\n  options: ({ match }) => ({ variables: { slug: match.params.slug } })\n})(Category)\n\nexport const allPosts = graphql(getAllPosts)(AllPosts)\n","import React from 'react'\nimport { getAllPosts } from '../graphql/queries/posts'\nimport Layout from '../components/Layout/index'\nimport GridRenderer from '../components/GridTypes/GridRenderer'\nimport { Helmet } from 'react-helmet'\n\nconst Home = ({ data, viewtype, searchposts }) => {\n  return (\n    <Layout>\n      <RenderHome data={data} viewtype={viewtype} searchposts={searchposts} />\n      <span />\n    </Layout>\n  )\n}\n\nconst RenderHome = ({ data, viewtype }) => {\n  return (\n    <>\n      <Helmet>\n        <title>Home | Bulletin - Franciscan University of Steubenville</title>\n      </Helmet>\n      <GridRenderer\n        viewtype={viewtype}\n        variables={{\n          first: 15\n        }}\n        query={getAllPosts}\n      />\n    </>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { graphql } from 'react-apollo'\nimport { SinglePostDetail } from '../graphql/queries/posts'\nimport Layout from '../components/Layout/index'\nimport Loader from '../components/Loader'\nimport { Helmet } from 'react-helmet'\nimport Typography from '@material-ui/core/Typography'\nimport { blue, grey } from 'material-ui/colors'\nimport { withStyles } from 'material-ui/styles'\n// import { Link } from \"react-router-dom\";\n// import '../styles/app.css'\n\nconst styles = {\n  card: {\n    marginBottom: 15\n  },\n  titleColor: {\n    color: blue[800]\n  },\n  dateColor: {\n    color: grey[500]\n  },\n  categoryColor: {\n    color: '#ffb41f'\n  },\n  media: {\n    height: 250\n  },\n  link: {\n    color: 'inherit',\n    textDecoration: 'none'\n  }\n}\n\nconst PostDetail = ({ data, classes }) => {\n  const isLoading = data.loading\n  return (\n    <Layout>\n      <Helmet>\n        <title>Loading... - Franciscan University of Steubenville</title>\n      </Helmet>\n      {isLoading && <Loader />}\n      {!isLoading && <RenderPost data={data} classes={classes} />}\n    </Layout>\n  )\n}\n\nconst RenderPost = ({ data, classes }) => {\n  const post = data.postBy\n  const date = new Date(post.date).toLocaleDateString()\n  return (\n    <div>\n      <Helmet>\n        <title>{post.title} - Franciscan University of Steubenville</title>\n      </Helmet>\n      {post.featuredImage && (\n        <img\n          alt=''\n          style={{ height: '600px', width: '800px' }}\n          src={post.featuredImage.sourceUrl}\n        />\n      )}\n      <Typography type='caption' variant='h6' className={classes.categoryColor}>\n        {post.categories.edges[0].node.name.toUpperCase()}\n      </Typography>\n      <Typography type='headline' className={classes.titleColor} variant='h4'>\n        {post.title}\n      </Typography>\n      <Typography type='subheading' variant='subtitle1'>\n        {date}\n      </Typography>\n\n      <Typography\n        type='body1'\n        component='div'\n        dangerouslySetInnerHTML={{ __html: post.content }}\n      />\n    </div>\n  )\n}\n\nexport default withStyles(styles)(\n  graphql(SinglePostDetail, {\n    options: ({ match }) => ({ variables: { slug: match.params.slug } })\n  })(PostDetail)\n)\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Help = () => (\n  <div>\n    <Helmet>\n      <title>Help | Student Bulletin FUS</title>\n    </Helmet>\n    <section>\n      <p>\n        For FUS Student Bulletin help, contact Jedediah Arnold at\n        jarnold@francisca.edu\n        <br />\n        <br />\n        This page will be updated much further for troubleshooting\n      </p>\n    </section>\n  </div>\n)\n\nexport default Help\n","import React from 'react'\nimport { getAllPosts } from '../graphql/queries/posts'\nimport dayjs from 'dayjs'\nimport Layout from '../components/Layout/index'\nimport GridRenderer from '../components/GridTypes/GridRenderer'\nimport { Helmet } from 'react-helmet'\n\nconst week = dayjs().startOf('week')\n\nconst Bulletin = ({ data, viewtype, searchposts }) => {\n  return (\n    <Layout>\n      <RenderHome data={data} viewtype={viewtype} searchposts={searchposts} />\n      <span />\n    </Layout>\n  )\n}\n\nconst RenderHome = ({ data, viewtype, searchposts }) => {\n  return (\n    <>\n      <Helmet>\n        <title>Home | Bulletin - Franciscan University of Steubenville</title>\n      </Helmet>\n      <GridRenderer\n        viewtype={viewtype}\n        query={getAllPosts}\n        variables={{\n          where: {\n            dateQuery: {\n              after: {\n                day: week.date(),\n                month: week.month() + 1,\n                year: week.year()\n              }\n            }\n          }\n        }}\n      />\n    </>\n  )\n}\n\nexport default Bulletin\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\n// Import Views\nimport Category, { allPosts } from './views/Category'\nimport Home from './views/Home'\nimport PostDetail from './views/PostDetail'\nimport Help from './views/Help'\nimport Bulletin from './views/Bulletin'\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path='/all' component={Home} />\n        <Route exact path='/' component={Bulletin} />\n        <Route exact path='/category/' component={allPosts} />\n        <Route exact path='/category/:slug' component={Category} />\n        <Route path='/post/:slug' component={PostDetail} />\n        <Route exact path='/help' component={Help} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default Routes\n","import React from 'react'\nimport { ApolloProvider } from 'react-apollo'\nimport client from './graphql/apolloClient'\nimport Routes from './Routes'\n\n// url: 'http://bulletinlocaltest.local/graphql'\n\nconst App = () => {\n  return (\n    <ApolloProvider client={client}>\n      <Routes />\n    </ApolloProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport 'typeface-roboto'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}